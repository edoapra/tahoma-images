name: pyDNMFk_apptainer

on:
  schedule:
    - cron: '0 0 * * SUN'
  repository_dispatch:
    types: [backend_automation]
  workflow_dispatch:
  workflow_call:

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
    - name: pkg cleanup
      run: |
        df -h
        if [[ $(uname -s) == "Linux" ]]; then
        ubuntu_ver=$(cat /etc/os-release | grep VERSION_ID |cut -d \" -f 2)
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n
        sudo apt-get purge -y azure-cli || true
        sudo apt-get purge -y google-cloud-cli microsoft-edge-stable dotnet-sdk-7.0 dotnet-sdk-6.0 google-chrome-stable firefox
        sudo apt-get purge -y temurin-17-jdk temurin-11-jdk temurin-8-jdk
        if [[ $ubuntu_ver == "20.04" ]]; then
        sudo apt-get purge -y llvm-12-dev llvm-11-dev llvm-10-dev
        sudo apt-get purge -y hhvm
        sudo apt-get purge -y libgl1-mesa-dri
        fi
        if [[ $ubuntu_ver == "22.04" ]]; then
        sudo apt-get purge -y llvm-13-dev llvm-14-dev llvm-15-dev
        fi
        sudo apt-get -y clean
        sudo apt-get autoremove -y 
        dpkg-query -Wf '${Installed-Size}\t${Package}\n' | sort -n
        df -h
        fi
    - name: tag
      run: |
        echo "tag=oras://ghcr.io/${{ github.repository }}/apptainer_noucx" >> $GITHUB_ENV
    - name: echo-tag
      run: |
        echo ' the apptainer tag is ' ${{ env.tag }}
    - name: Checkout nwchem-singularity source
      uses: actions/checkout@v4
    - name: Install apptainer
      env:
        APP_VER: 1.3.0
      run: |
        sudo apt-get install -y  libfuse2 libseccomp2 zlib1g uidmap squashfs-tools squashfuse fuse2fs fuse-overlayfs fakeroot
        wget -q  https://github.com/apptainer/apptainer/releases/download/v${APP_VER}/apptainer_${APP_VER}_amd64.deb 
        sudo dpkg -i apptainer_${APP_VER}_amd64.deb
        which apptainer
        apptainer version
    - name: build an apptainer container
      run: |
        cd pyDNMFk-apptainer
        apptainer build --fakeroot pyDNMFk.sif Singularity_noucx.def
    - name: builddate
      id: build-date
      run: |
        echo "date=$(TZ=America/Los_Angeles date +%Y%m%d_%H%M%S)" >> $GITHUB_ENV
    - name: push to ghcr.io
      run: |
        cd pyDNMFk-apptainer
        ls -lrta
        echo ${{ secrets.GITHUB_TOKEN }} | apptainer registry login -u ${{ github.actor }} --password-stdin oras://ghcr.io
        apptainer remote list
        apptainer push pyDNMFk.sif ${{ env.tag }}:${{ env.date }}
        apptainer push pyDNMFk.sif ${{ env.tag }}:latest
    - name: test image with apptainer
      run: |
        cd pyDNMFk-apptainer
        ls -la
        apptainer exec ${{ env.tag }}:${{ env.date }} python /pyDNMFk/main.py  --help || true
